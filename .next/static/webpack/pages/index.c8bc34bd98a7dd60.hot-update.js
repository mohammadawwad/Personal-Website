"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/constants/constants.js":
/*!************************************!*\
  !*** ./src/constants/constants.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"projects\": function() { return /* binding */ projects; },\n/* harmony export */   \"TimeLineData\": function() { return /* binding */ TimeLineData; },\n/* harmony export */   \"Experiences\": function() { return /* binding */ Experiences; }\n/* harmony export */ });\nvar projects = [{\n  title: 'MIT 6.86x AI Course',\n  description: \"Completing the MIT AI course provided me with a solid foundation in machine learning principles and practical applications. Through projects like building an Automatic Review Analyzer, Digit Recognition using Neural Networks, and applying Reinforcement Learning, I gained hands-on experience in implementing models such as linear classifiers, neural networks, and clustering algorithms. The course sharpened my skills in Python, TensorFlow, and model evaluation, deepening my understanding of key concepts like gradient descent, regularization, and feature engineering, and preparing me to tackle real-world AI challenges.\",\n  image: '/images/MIT.png',\n  tags: ['Python', 'AI'],\n  code: 'https://github.com/mohammadawwad/MIT-6.86AI-Python',\n  demo: 'https://www.edx.org/learn/machine-learning/massachusetts-institute-of-technology-machine-learning-with-python-from-linear-models-to-deep-learning?utm_medium=social&utm_campaign=social-sharing-db&utm_source=twitter',\n  id: 0\n}, {\n  title: 'Formula EV Racecar',\n  description: \"Completing my first year of engineering with the UVic Formula SAE team was a transformative experience. Despite a last-minute battery issue that forced us to withdraw from the Michigan competition, my work on the controls system team provided hands-on experience in low-level C programming, CAN networks, and data analysis to operate and safely control a high speed EV. This opportunity elevated my skills to industrial standards, deepening my understanding of practical engineering solutions in the high-stakes environment of motorsports.\",\n  image: '/images/FSAE.png',\n  tags: ['C', 'Control Systems'],\n  code: 'https://github.com/UVicFormulaMotorsport/Control-System-Tutorials',\n  demo: 'https://www.youtube.com/@UVicFSAE/videos',\n  id: 1\n}, {\n  title: 'AI Flappy Bird',\n  description: \"This project aimed to create an independent AI agent capable of playing the Flappy Bird game. Leveraging reinforcement learning techniques, the AI employs a neural network to interpret real-time game states, transforming them into strategic actions. With each generation, the dataset rapidly refines, empowering the AI to consistently score high. Notably, the video showcases the evolution from a challenging initial dataset to an AI that achieves enduring success within just few generations.\",\n  image: '/images/FlappyBird.png',\n  tags: ['Python', 'AI'],\n  code: 'https://github.com/mohammadawwad/Flappy-Bird-AI',\n  demo: 'https://www.youtube.com/watch?v=eYFpxTxpqcQ',\n  id: 2\n}, {\n  title: 'FRC 2023 Robot',\n  description: \"Project features include multidirectional swerve drive, adaptable linear extension, efficient intake, automated game piece alignment, dynamic wrist control, and precise outfeed pacing. Programming highlights involve field-oriented swerve drive, auto-balancing endgame code, PID-tuned motor control, and sensor-driven automation. Streamlined autonomous routines interpret JSON data for seamless movement and control.\",\n  image: '/images/Sam.png',\n  tags: ['Java'],\n  code: 'https://github.com/FRC-6390/FRC-Season-2023',\n  demo: 'https://www.youtube.com/watch?v=VzLffgqjD-g',\n  id: 3\n}, {\n  title: 'AI Nueral Network Car',\n  description: \"A self driving car game that allows you to race against your very own neural network that you can develop ove time. The game uses advanced physics for movement and virtual distance sensors for providing a range of distances and feedback for the AI car being developed. The site even lets you save previous networks and delete them from your local storage. It even includes a network visualizer that can show you what the car you are up against is processing based on weights and biases.\",\n  image: '/images/AICar.png',\n  tags: ['Javascript OOP'],\n  code: 'https://github.com/mohammadawwad/AI-Self-Driving-Car',\n  demo: 'https://ai-self-driving-car.netlify.app/',\n  id: 4\n}, {\n  title: 'First Journey',\n  description: \"Welcome to the centralized Media tech Application, where you can showcase all your projects from application and programming to robotics and electronics. First Journey allows you to create an account, make posts, edit and delete them, as well as like and comment. Some neat features include searching for specific posts by Title and or Tags. Make sure to sign up and discover some other cool features.\",\n  image: '/images/FirstJourney.png',\n  tags: ['MongoDB', 'Express', 'React.js', 'Node.js'],\n  code: 'https://github.com/mohammadawwad/First-Journey',\n  demo: 'https://firstjourney.netlify.app/posts',\n  id: 5\n}, {\n  title: 'FRC Robot',\n  description: \"As lead programmer on FRC team 6390 Hephaestus, I was responsible for programming our robot named Kevin. Some key functionalities include vision tracking, autonomous routines, and robot subsystems such as shooting, climbing, intaking and much more. This was all done by programming a sequence of motors, servos, pneumatics, and cameras using Java as well as creating a remote controlled operating interface with a series of different controllers from Joysticks to Xbox controllers.\",\n  image: '/images/Kevin.png',\n  tags: ['Java'],\n  code: 'https://github.com/mohammadawwad/KevinRobotV2',\n  demo: 'https://www.youtube.com/watch?v=eHRTgEbxUA0',\n  id: 6\n}, {\n  title: 'FRC Swerve Drive',\n  description: \"I'm proud to say I have programmed the first Swerve Drive robot in British Columbia, Canada. Programming it was extremely difficult but it has its advantages such as moving in any direction as well as rotating as it drives. This allows the robot to have a lot of movement and control and was programmed in a field oriented way since each wheel or module can move back and forward and spin clockwise and counter cloockwise infinitely.\",\n  image: '/images/SwerveDrive.png',\n  tags: ['Java'],\n  code: 'https://github.com/FRC-6390/Swerve2021',\n  demo: 'https://www.youtube.com/watch?v=Kxt1Z--HFpQ',\n  id: 7\n}, {\n  title: 'Stylish Tile Website',\n  description: \"While working at Stylish Tile as a Web Developer I was responsible for creating and developing a responsive and interactive website from scratch. This includes creating image libraries, and animations.\",\n  image: '/images/StylishTile.png',\n  tags: ['JavaScript', 'HTML', 'CSS'],\n  code: 'https://github.com/mohammadawwad/Stylish-Tile-web',\n  demo: 'https://www.youtube.com/watch?v=cvaDPgurVzg',\n  id: 8\n}, {\n  title: '3rd place Replit Hackathon',\n  description: \"Minlexa was my project submission for the Replit Summer Amazon Alexa Hackathon. It allowed you to ask alexa any question related to crafting in Minecraft and would inform you about all the necessary materials needed to craft the item, as well as give you a brief description about it, and a visual display.\",\n  image: '/images/Minecraft.png',\n  tags: ['Python', 'Amazon Web Services'],\n  code: 'https://replit.com/@awwad/Minelexa',\n  demo: 'https://youtu.be/wH6XelT9Bcc',\n  id: 9\n}, {\n  title: 'Pathfinding Application',\n  description: \"Developed using the A* and Dijkstra algorithms to find the shortest path possible to a desired setpoint. It was developed using Java Swing with multiple GUI features. It was even expanded upon into a full scale application to develop robot coordinates which can be used to automatically create an autonomous routine which can be seen in the video demonstration.\",\n  image: '/images/FRCJavaPathfinding.png',\n  tags: ['Java'],\n  code: 'https://github.com/mohammadawwad/Java-Pathfinding',\n  demo: 'https://www.youtube.com/watch?v=bpHeQwgfLRc',\n  id: 10\n}, {\n  title: 'Face And Mask Recognition',\n  description: \"Using Machine Learning along side Python and OpenCV I was able to develop a face recognition system that would auto detect anyone it can recognise from the pictures uploaded to the program trainer. From there I further developed it during the pandemic to recognise whether or not someone is wearing a mask which can be prove useful for enforcing specific rules and laws.\",\n  image: '/images/FaceRec.png',\n  tags: ['Python'],\n  code: 'https://github.com/mohammadawwad/Python-Vision-Processing',\n  demo: 'https://youtu.be/eqJNr-Rn-S0',\n  id: 11\n}, {\n  title: 'Exhaust Hackathon',\n  description: \"Exhaust was my Project Tech Conference Hackathon submission. It is a carbon emission tracking application which allows you to visualize all your data with graphs and charts as well as global statistics showing you all emissions from other participating countries. With features such as google maps active tracking using the maps api for more accurate results.\",\n  image: '/images/Exhaust.png',\n  tags: ['MongoDB', 'Express', 'React.js', 'Node.js'],\n  code: 'https://github.com/mohammadawwad/Exhaust',\n  demo: 'https://youtu.be/UTqhwg0qvQ8',\n  id: 12\n}];\nvar TimeLineData = [{\n  year: 2017,\n  text: 'Started learning how to program'\n}, {\n  year: 2018,\n  text: 'Joined my schools robotics team'\n}, {\n  year: 2019,\n  text: 'Became Lead Programmer on the team'\n}, {\n  year: 2020,\n  text: 'Started working at Stylish Tile as a web developer'\n}, {\n  year: 2021,\n  text: 'Programming workshop mentor and organiser'\n}, {\n  year: 2022,\n  text: 'Accepted into SHAD program, and started Woring at Cloverdale Robotics as a Projected Developer'\n}, {\n  year: 2023,\n  text: 'Anounced as the 2023 Engineering Shulich Leader at UVIC'\n}, {\n  year: 2024,\n  text: 'Started my first Software Development Co-op at SystemMicro'\n}];\nvar Experiences = [{\n  index: 0,\n  title: \"Project Developer\",\n  company: \"Cloverdale Robotics\",\n  dateRange: \"2022\",\n  description: \"fdsfds\"\n}, {\n  index: 1,\n  title: \"Software Developer\",\n  company: \"SystemMicro\",\n  dateRange: \"2022\",\n  description: \"fdsfds\"\n}];\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/constants/constants.js\n");

/***/ })

});